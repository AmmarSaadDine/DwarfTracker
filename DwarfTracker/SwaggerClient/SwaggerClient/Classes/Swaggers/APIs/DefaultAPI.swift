//
// DefaultAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class DefaultAPI: APIBase {
    /**
     All dwarves
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getDwarves(completion: @escaping ((_ data: [Dwarf]?,_ error: Error?) -> Void)) {
        getDwarvesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     All dwarves
     - GET /dwarf
     - Gets all dwarves
     - examples: [{contentType=application/json, example=[ {
  "name" : "aeiou",
  "id" : "aeiou",
  "age" : "aeiou"
} ]}]

     - returns: RequestBuilder<[Dwarf]> 
     */
    open class func getDwarvesWithRequestBuilder() -> RequestBuilder<[Dwarf]> {
        let path = "/dwarf"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Dwarf]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Post a new Dwarf
     
     - parameter payload: (body) A single JSON object containing the dwarf definition 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postDwarf(payload: Dwarf, completion: @escaping ((_ error: Error?) -> Void)) {
        postDwarfWithRequestBuilder(payload: payload).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Post a new Dwarf
     - POST /dwarf
     - endpoint for posting a newly created dwarf to the server
     
     - parameter payload: (body) A single JSON object containing the dwarf definition 

     - returns: RequestBuilder<Void> 
     */
    open class func postDwarfWithRequestBuilder(payload: Dwarf) -> RequestBuilder<Void> {
        let path = "/dwarf"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = payload.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
